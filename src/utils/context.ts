import { Request, Response } from 'express'
import { Redis } from 'ioredis'
import { redis } from './redis'
import { Session } from 'express-session'
import { prisma } from '../prisma'

// original context
/*
export type Context = {
  req: Request & { session: IGetSessionInfo }
  res: Response
  redis: Redis
  prisma: PrismaClient
}*/

type Prisma = typeof prisma

// extend express-sessions with custom fields
interface IGetSessionInfo extends Session {
  manager_id?: number
  admin?: number
}

// define a context for use in production and mock testing
// rather than mock the entire req / res objects
// this focuses only on the functionality we need
export interface Context {
  session: {
    sessionID: string
    manager_id?: number
    admin?: number
    // NOTE: may need to specify 'destroy' as a promise
    // to gaurantee correct behavior when mocking for unit testing
    destroy: any
    clearCookie: any
    ip: string
  }
  redis: Redis
  prisma: Prisma
}

// define customized req and res fields
interface IReqRes {
  req: Request & { session: IGetSessionInfo }
  res: Response
}

// generate context for production
// capturing real req/ res arguments as generated by the client
export const createContext = ({ req, res }: IReqRes): Context => ({
  session: {
    sessionID: req.sessionID,
    manager_id: req.session.manager_id,
    admin: req.session.admin,
    destroy: req.session.destroy,
    clearCookie: res.clearCookie,
    ip: req.ip,
  },
  redis,
  prisma,
})

// generate a mock context for a user without admin access
export const createMockUserContext = (): Context => ({
  session: {
    sessionID: 'NOTAREALSESSIONID',
    manager_id: 2,
    admin: undefined,
    destroy: () => {},
    clearCookie: () => {},
    ip: 'mock-ip:1111',
  },
  redis,
  prisma,
})

// generate a mock context for an admin
export const createMockAdminContext = (): Context => ({
  session: {
    sessionID: 'NOTAREALSESSIONID',
    manager_id: 1,
    admin: 2,
    destroy: () => {},
    clearCookie: () => {},
    ip: 'mock-ip:1111',
  },
  redis,
  prisma,
})

// type signature for real/ mock context creation function
// used for DI when generating apollo server
export type CreateContext = typeof createContext | typeof createMockUserContext
