/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */







declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  Query: {};
  Workshop: { // root type
    advisor?: string | null; // String
    client?: string | null; // String
    conference_type?: string | null; // String
    course_type?: string | null; // String
    open_air_id?: string | null; // String
    record_attendance?: boolean | null; // Boolean
    time_zone?: string | null; // String
    workshop_id?: number | null; // Int
    workshop_language?: string | null; // String
    workshop_status?: string | null; // String
  }
  Workshop_Sessions: { // root type
    duration_in_hours?: number | null; // Float
    session_date?: string | null; // String
    session_status?: string | null; // String
    start_time?: string | null; // String
    workshop_id?: number | null; // Int
    workshop_session_id?: number | null; // Int
    zoom_link?: string | null; // String
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  Query: { // field return type
    ok: boolean; // Boolean!
  }
  Workshop: { // field return type
    advisor: string | null; // String
    client: string | null; // String
    conference_type: string | null; // String
    course_type: string | null; // String
    open_air_id: string | null; // String
    record_attendance: boolean | null; // Boolean
    time_zone: string | null; // String
    workshop_id: number | null; // Int
    workshop_language: string | null; // String
    workshop_status: string | null; // String
  }
  Workshop_Sessions: { // field return type
    duration_in_hours: number | null; // Float
    session_date: string | null; // String
    session_status: string | null; // String
    start_time: string | null; // String
    workshop_id: number | null; // Int
    workshop_session_id: number | null; // Int
    zoom_link: string | null; // String
  }
}

export interface NexusGenFieldTypeNames {
  Query: { // field return type name
    ok: 'Boolean'
  }
  Workshop: { // field return type name
    advisor: 'String'
    client: 'String'
    conference_type: 'String'
    course_type: 'String'
    open_air_id: 'String'
    record_attendance: 'Boolean'
    time_zone: 'String'
    workshop_id: 'Int'
    workshop_language: 'String'
    workshop_status: 'String'
  }
  Workshop_Sessions: { // field return type name
    duration_in_hours: 'Float'
    session_date: 'String'
    session_status: 'String'
    start_time: 'String'
    workshop_id: 'Int'
    workshop_session_id: 'Int'
    zoom_link: 'String'
  }
}

export interface NexusGenArgTypes {
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}